plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    maven { url "https://cache-redirector.jetbrains.com/plugins.gradle.org/m2" }
}

@SuppressWarnings("GrMethodMayBeStatic") // IDEA-229168
private void setGroupAndVersion(MavenPublication publication) {
    publication.groupId = 'org.jetbrains'
    publication.version = this.this_version
}

publishing {
    mavenForPublishing(delegate)
    publications {
        kotlinMultiplatform {
            setGroupAndVersion(delegate)
            artifactId = 'space-api-client-runtime'
            pom {
                name = 'Space API client runtime'
                description = 'Runtime for JetBrains Space API client'
            }
        }
        metadata {
            setGroupAndVersion(delegate)
            artifactId = 'space-api-client-runtime-metadata'
            pom {
                name = 'Space API client runtime'
                description = 'Runtime for JetBrains Space API client'
            }
        }
    }
}

kotlin {
    /* Targets configuration omitted. 
    *  To find out how to configure the targets, please follow the link:
    *  https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#setting-up-targets */

    jvm {
        compilations.configureEach {
            tasks.named(compileKotlinTaskName).configure {
                kotlinOptions {
                    jvmTarget = "1.6"
                }
            }
        }
        mavenPublication {
            setGroupAndVersion(delegate)
            artifactId = 'space-api-client-runtime-jvm'
            pom {
                name = 'Space API client runtime'
                description = 'Runtime for JetBrains Space API client'
            }
        }
    }

    js {
        browser {
        }
        nodejs {
        }
        mavenPublication {
            setGroupAndVersion(delegate)
            artifactId = 'space-api-client-runtime-js'
            pom {
                name = 'Space API client runtime'
                description = 'Runtime for JetBrains Space API client'
            }
        }

        compilations.configureEach {
            tasks.named(compileKotlinTaskName).configure {
                kotlinOptions {
                    metaInfo = true
                    sourceMap = true
                    sourceMapEmbedSources = 'always'
                    moduleKind = "commonjs"
                    main = "call"
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                api kotlin('stdlib-common')
                api "io.ktor:ktor-client-core:$ktor_version"
                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$kotlinx_coroutines_version"
            }
        }

        jvmMain.dependencies {
            api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

            api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

            api "io.ktor:ktor-client-core-jvm:$ktor_version"

            api "com.fasterxml.jackson.core:jackson-core:$jackson_version"
            api "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
        }

        jsMain {
            dependencies {
                api "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"

                api "io.ktor:ktor-client-core-js:$ktor_version"
                api "io.ktor:ktor-client-js:$ktor_version"

                api npm("moment", "2.24.0")
                api npm("moment-timezone", "0.5.27")
                implementation npm("text-encoding", "0.7.0")
                implementation npm("abort-controller", "3.0.0")
            }
        }
    }
}
